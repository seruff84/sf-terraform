---
- hosts: all
  become: yes
  become_user: root
  tasks:

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: modprobe overlay
    modprobe:
      name: overlay
      state: present

  - name: modprobe br_netfilter
    modprobe:
      name: br_netfilter
      state: present


  - name: Configure kubelet EXTRA_ARGS
    copy:
      dest: /etc/sysctl.d/kubernetes.conf
      content: |
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1

  - name: net.bridge.bridge-nf-call-ip6tables
    sysctl:
      name: net.bridge.bridge-nf-call-ip6tables
      value: 1
      state: present
      reload: yes

  - name: net.bridge.bridge-nf-call-iptables
    sysctl:
      name: net.bridge.bridge-nf-call-iptables
      value: 1
      state: present
      reload: yes

  - name: net.ipv4.ip_forward
    sysctl:
      name: net.ipv4.ip_forward
      value: 1
      state: present
      reload: yes
  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io

  - name: Add my user to docker group
    user:
      name: seruff
      group: docker
  - name: Creates directory
    file:
      path: /etc/systemd/system/docker.service.d
      state: directory

  - name: Create daemon json config file
    copy:
      dest: /etc/docker/daemon.json
      content: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2"
        }
  
  - name: restart docker
    service:
      name: docker
      daemon_reload: yes    
      state: restarted
    
  - name: enable  docker                    
    systemd:
      name: docker
      state: started
      enabled: yes 

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Add IP address of all hosts to all hosts
    lineinfile:
      dest: /etc/hosts
      line: "{{ hostvars[inventory_hostname]['inventory_hostname']}} k8-master"
      state: present
